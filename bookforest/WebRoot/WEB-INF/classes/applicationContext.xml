<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

<!-- spring的配置文件，这里主要配置业务逻辑有关的 -->
<context:component-scan base-package="com.bookforest">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
</context:component-scan>
<!-- 数据源、事务控制 -->

	<!-- 数据源 -->
	<!-- 引入配置文件 -->
	<context:property-placeholder location="classpath:dbconfig.properties "/>
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
			<property name="url" value="${jdbc.jdbcUrl}"> </property>		
			<property name="driverClassName" value="${jdbc.driverClass}"></property>
			<property name="username" value="${jdbc.user}"></property>
			<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<!--配置mybatis整合  -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<!-- 指定mybatis全局配置文件 -->
			<property name="configLocation" value="classpath:mybatis-config.xml"></property>
			<property name="dataSource" ref="dataSource"></property>
			<!-- 指定mybatis的mapper文件位置 -->
			<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>
	
	<!-- 配置扫描器，将mybatis接口的实现加入到ioc中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="com.bookforest.dao"></property>
	</bean>
	
	<!-- 事务控制 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 开启基于注解的事务控制，使用xml配置的方式，一般比较重要的都用配置的方式 -->
	<aop:config>
			<!--切入点表达式  -->
			<aop:pointcut expression="execution(* com.bookforest.service..*(..))" id="txPoint"/>
			<!-- 配置事物增强 -->
			<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
	</aop:config>
	<!-- 配置事物增强，事物如何切入 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<tx:attributes>
				<!-- 所有方法都是事物方法 -->
				<tx:method name="*"/>
				<!-- 以get开头的方法，可以调优 -->
				<tx:method name="get*" read-only="true"/>
			</tx:attributes>
	
	</tx:advice>
</beans>
